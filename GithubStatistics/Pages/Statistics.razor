@page "/getStatistics"
@using Application.Model;
@using System.Text.Json;
@using System.Net.Http.Headers;
@using System.Net;
@using Application.Service.Interface;

@inject NavigationManager Navigation
@inject IGithubStatisticsService _githubService;

<body>
    @if (!StatisticsFound)
    {
        <div class="form-container">
            <form @onsubmit="GetStatistics">
                <div class="form-group">
                    <input type="text" @bind="Organization" id="organization" name="organization" placeholder="Organization" required>
                </div>
                <div class="form-group">
                    <input type="password" @bind="GhToken" id="ghToken" name="ghToken" placeholder="ghToken" required>
                </div>

                <div class="form-group">
                    <button type="submit" class="submit-button">
                        Get Statistics
                    </button>
                </div>
            </form>
        </div>
    }
    else
    {
        <div class="ranking-container">
            <div class="header">
                <div class="header-item">Top 10 Repos</div>
            </div>
            @foreach (var item in rankingItems)
            {
                <div class="ranking-item">
                    <div class="position">
                        @if (item.Position == 1)
                        {
                            <span>🥇 @item.Position</span>
                        }
                        else if (item.Position == 2)
                        {
                            <span>🥈 @item.Position</span>
                        }
                        else if (item.Position == 3)
                        {
                            <span>🥉 @item.Position</span>
                        }
                        else
                        {
                            <span>🎖️ @item.Position</span>
                        }

                    </div>
                    <div class="avatar-name">
                        @if (item.AvatarUrl != null)
                        {
                            <img src="@item.AvatarUrl" alt="Avatar">
                        }
                        <span>@item.Name</span>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Popup de Loading -->
    @if (IsLoading)
    {
        <div class="loading-overlay">
            <div class="loading-spinner">
                Building the retrospective...
            </div>
        </div>
    }

</body>

@code {
    private bool StatisticsFound { get; set; }
    private bool IsLoading { get; set; }
    private List<RankingItem> rankingItems = new List<RankingItem>();

    [Parameter] public string Organization { get; set; }
    [Parameter] public string GhToken { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // if (firstRender) // prevent infinite loop
        // {
        //     StateHasChanged();  // update view
        // }
    }

    protected override void OnInitialized()
    {
        _githubService.GithubStatisticsUpdated += OnGithubStatisticsFinish;
    }

    private async Task GetStatistics()
    {
        _ = _githubService.GetStatistics(Organization, GhToken);
        IsLoading = true;
        InvokeAsync(StateHasChanged);
    }

    private void OnGithubStatisticsFinish(List<RankingItem> data)
    {
        rankingItems = data;
        StatisticsFound = true;
        IsLoading = false;
        InvokeAsync(StateHasChanged);
    }
}
